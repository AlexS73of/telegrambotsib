package com.example.telegramdipbot.bot.keyboard;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

@Component
public class Keyboard implements KeyboardInterface {

    @Override
    public InlineKeyboardMarkup createKeyboard(KeyboardType type) {
        switch (type) {
            case MAIN_MENU:
                return createMainMenuKeyboard();
            case NECESSARY_STEPS:
                return createNecessaryStepsKeyboard();
            case REC_STEPS:
                return createRecStepsKeyboard();
            case INSTRUCTIONS_ABOUT_REGISTRATION:
                return createInstructionsAboutRegistrationKeyboard();
            case PKZI_KEY:
                return createPKZIKeyKeyboard();
            case PBOTOS_EDUCATION:
                return createPBOTOSEducationKeyboard();
            case INFORMATION_SECURITY:
                return createInformationSecurityKeyboard();
            case CONTACTS_CDS:
                return createContactsCDSKeyboard();
            default:
                throw new IllegalArgumentException("‚ùå Unknown keyboard type: " + type);
        }
    }

    @Override
    public SendMessage createKeyboardMessage(Long chatId, String text, KeyboardType keyboardType) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        message.setReplyMarkup(createKeyboard(keyboardType));
        return message;
    }

    private InlineKeyboardMarkup createMainMenuKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üîπ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏").callbackData("unnecessaryStepsButton").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üî∏ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —à–∞–≥–∏").callbackData("recommendedStepsButton").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞—è–≤–æ–∫").callbackData("instructionRegistrationButton").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("üîë –ü–ö–ó–ò (–∫–ª—é—á)").callbackData("pkziKeyButton").build());

        List<InlineKeyboardButton> row5 = new ArrayList<>();
        row5.add(InlineKeyboardButton.builder().text("üéì –ü–ë–û–¢–û–° (–æ–±—É—á–µ–Ω–∏–µ)").callbackData("pbtosEducationButton").build());

        List<InlineKeyboardButton> row6 = new ArrayList<>();
        row6.add(InlineKeyboardButton.builder().text("üõ°Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å").callbackData("informationSecurityButton").build());

        List<InlineKeyboardButton> row7 = new ArrayList<>();
        row7.add(InlineKeyboardButton.builder().text("üÜò –°–≤—è–∑—å —Å –¶–î–°").callbackData("contactCDSButton").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);
        keyboard.add(row5);
        keyboard.add(row6);
        keyboard.add(row7);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createNecessaryStepsKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üìÅ –î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è").callbackData("button14").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üìä 1–° –ï–ò–°–£–ü (1–° –î–û, 1–° –í–†–ú)").callbackData("button11").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("‚úâÔ∏è SAP RNP (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è –ø–æ—á—Ç–∞)").callbackData("button12").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("üîë –ü–ö–ó–ò (–∫–ª—é—á)").callbackData("button13").build());

        List<InlineKeyboardButton> row5 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);
        keyboard.add(row5);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createRecStepsKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üìã –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞").callbackData("button21").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –°–ò–ë–ò–ù–¢–ï–ö").callbackData("button22").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createInstructionsAboutRegistrationKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üìù –¢–∏–ø–æ–≤–∞—è –∑–∞—è–≤–∫–∞ (–æ–±—Ä–∞–∑–µ—Ü)").callbackData("button31").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –¶–î–°").callbackData("button32").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("üë®‚Äçüíº –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º").callbackData("button33").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createPKZIKeyKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é").callbackData("button41").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏").callbackData("button42").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã").callbackData("button43").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createPBOTOSEducationKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üé• –ü—Ä–æ–π—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂").callbackData("button51").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ").callbackData("button52").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ").callbackData("button53").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createInformationSecurityKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üìπ –ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂").callbackData("button61").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ").callbackData("button62").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("üìú –ü–æ–ª–∏—Ç–∏–∫–∞ –ò–ë").callbackData("button63").build());

        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);
        keyboard.add(row4);

        markup.setKeyboard(keyboard);
        return markup;
    }

    private InlineKeyboardMarkup createContactsCDSKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(InlineKeyboardButton.builder().text("üí¨ –ß–∞—Ç —Å –¶–î–°").callbackData("button71").build());

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(InlineKeyboardButton.builder().text("‚ùì FAQ").callbackData("button72").build());

        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é").callbackData("buttonMainMenu").build());

        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);

        markup.setKeyboard(keyboard);
        return markup;
    }
}